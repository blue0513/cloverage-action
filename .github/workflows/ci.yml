name: CI

on:
  workflow_call:
  push:
    branches:
      - 'main'
  pull_request:

env:
  COVERAGE_DIR: "target/coverage"
  PR_COVERAGE_FILE: "coverage-report.log"
  PR_COVERAGE_SUMMARY_FILE: "branch-coverage.log"
  COVERAGE_DIFF_FILE: "diff.log"
  MAIN_COVERAGE_FILE: "main-coverage.log"
  HTML_DIR: "report-output-directory"
  BUCKET: "blue-coverage-report"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Prepare library

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '8'
      - uses: DeLaGuardo/setup-clojure@10.2
        with:
          lein: 2.9.8
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      # Coverage

      - name: Calculate coverage of this branch
        run: |
          lein cloverage --lcov --no-colorize -o "${{ env.COVERAGE_DIR }}" > ${{ env.PR_COVERAGE_FILE }}
          cat ${{ env.PR_COVERAGE_FILE }} | sed -n '/Writing HTML report to/,$p' | sed '1,2d' > ${{ env.PR_COVERAGE_SUMMARY_FILE }}

      # lcov viewer

      - name: Create lcov html
        run: |
          npm ci
          npx lcov-viewer lcov -o "${{ env.HTML_DIR }}" "${{ env.COVERAGE_DIR }}/lcov.info"

      - name: Upload html to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp --region ap-northeast-1 "${{ env.HTML_DIR }}/" "s3://${{ env.BUCKET }}/${{ github.run_id }}/"

      # Archive coverage of main branch

      - name: Rename coverage file
        if: github.ref == 'refs/heads/main'
        run: mv "${{ env.PR_COVERAGE_SUMMARY_FILE }}" "${{ env.MAIN_COVERAGE_FILE }}"

      - name: Upload coverage file
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: "${{ env.MAIN_COVERAGE_FILE }}"
          path: "${{ env.MAIN_COVERAGE_FILE }}"

      # Download main branch coverage and Calculate Coverage diff

      - name: Download main coverage artifact
        if: github.ref != 'refs/heads/main'
        run: gh run download -n ${{ env.MAIN_COVERAGE_FILE }} || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check coverage file existence
        if: github.ref != 'refs/heads/main'
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: "${{ env.MAIN_COVERAGE_FILE }}, ${{ env.PR_COVERAGE_SUMMARY_FILE }}"

      - name: Create coverage diff file
        if: github.ref != 'refs/heads/main' && steps.check_files.outputs.files_exists == 'true'
        run: |
          echo '```diff' > ${{ env.COVERAGE_DIFF_FILE }}
          diff --suppress-common-lines --color='never' ${{ env.MAIN_COVERAGE_FILE }} ${{ env.PR_COVERAGE_SUMMARY_FILE }} >> ${{ env.COVERAGE_DIFF_FILE }} || true
          echo '```' >> ${{ env.COVERAGE_DIFF_FILE }}

      # Post comment

      - name: Comment coverage diff file
        if: github.ref != 'refs/heads/main' && steps.check_files.outputs.files_exists == 'true'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: "${{ env.COVERAGE_DIFF_FILE }}"
